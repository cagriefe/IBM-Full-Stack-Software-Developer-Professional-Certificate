### Asynchronous I/O with Callback Programming

Asynchronous network operations can be handled using callback functions in order to prevent blocking JavaScript code  

A callback function must invoke another callback function to pass a message from the Node.js module back to the main application after the Node.js module receives a response message 

Nested callbacks can be difficult to read and debug. Inversion of control causes trust issues when dealing with third-party code 

Promise objects are most useful for operations that are time-consuming and can block resources 

JSON.parse() and JSON.stringify() are two methods used to parse JSON objects 